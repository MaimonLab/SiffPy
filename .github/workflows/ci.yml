name: Publish wheels to PyPI

on:
    push:
        branches:
            - main
            - dev
        tags:
            - v*

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [macos-13, macos-14, macos-15, ubuntu-latest, windows-latest,]
    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.1
        with:
          package-dir: .
          output-dir: wheelhouse
          config-file: "{package}/pyproject.toml"
        env:
          CIBW_SKIP: pp*
          # Run the package tests using `pytest`
          CIBW_TEST_REQUIRES: pytest dropbox asyncio tqdm aiohttp suite2p
          CIBW_TEST_COMMAND: >
            cd {package} &&
            pytest tests
          DROPBOX_SECRET: ${{ secrets.DROPBOX_SECRET }}
          DROPBOX_APP_KEY: ${{ secrets.DROPBOX_APP_KEY }}
          DROPBOX_REFRESH_TOKEN: ${{ secrets.DROPBOX_REFRESH_TOKEN }}
          DROPBOX_SHARED_LINK: ${{ secrets.DROPBOX_SHARED_LINK }}
    
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Optional, use if you use setuptools_scm
          submodules: true  # Optional, use if you have submodules

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  # upload_pypi:
  #   needs: [build_wheels, build_sdist]
  #   runs-on: ubuntu-latest
  #   environment: pypi
  #   permissions:
  #     id-token: write
  #   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
  #   steps:
  #   - uses: actions/download-artifact@v4
  #     with:
  #     # unpacks all CIBW artifacts into dist/
  #       pattern: cibw-*
  #       path: dist
  #       merge-multiple: true

  #   - uses: pypa/gh-action-pypi-publish@release/v1
  #     with:
  #       # To test: repository-url: https://test.pypi.org/legacy/
